#!/bin/sh

# git bud; create a commit of index, but do
# not advance the current branch, instead,
# create a new branch and reset the HEAD when
# finished.
#
# This is best used to commit a features that
# will not be extended any time soon.
#
# This is especially helpful when one borks-up
# the repo, but doesn't want to obliterate the
# changes when reseting to a previous state.
#
# USAGE:
# 
# git bud <branch_name>
#
# if branch_name is not specified, an autogenerated
# one is chosen of the form bud/%d

current_branch=$(git rev-parse --abbrev-ref HEAD)
if [[ "$current_branch" == "HEAD" ]] ; then
    current_branch=$(git rev-parse HEAD)
fi
echo "current HEAD at $current_branch"

new_branch_name=$1

if [[ ! $new_branch_name ]] ; then
    git_dir=$(git rev-parse --git-dir)
    buds_dir=$git_dir/refs/heads/buds/
    mkdir -p $buds_dir
    branch_index=$(ls $buds_dir | sort -n | tail -n 1)

    if [[ ! $branch_index ]] ; then
        branch_index=0
    else
        branch_index=$(($branch_index + 1))
    fi

    new_branch_name=buds/$branch_index
fi

git checkout HEAD^0 &> /dev/null

git commit && git branch $new_branch_name &> /dev/null && \
    echo "Created new bud $new_branch_name (at $(git rev-parse --short $new_branch_name))" && \
    git checkout $current_branch &> /dev/null || \
    echo "Failed to create new bud, aborted." >&2
